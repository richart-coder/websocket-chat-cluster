services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - chat_network

  chat-server-1:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - chat_network
    volumes:
      - ./logs:/app/logs

  chat-server-2:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3002:3001"
    environment:
      - PORT=3001
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - chat_network
    volumes:
      - ./logs:/app/logs

  chat-server-3:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3003:3001"
    environment:
      - PORT=3001
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - chat_network
    volumes:
      - ./logs:/app/logs

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - chat-server-1
      - chat-server-2
      - chat-server-3
    restart: unless-stopped
    networks:
      - chat_network

  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - chat_network

volumes:
  redis_data:

networks:
  chat_network:
    driver: bridge
